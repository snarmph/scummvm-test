name: CI
on: [push, pull_request]
#  schedule:
#    - cron: '0 0-23/4 * * *'
permissions:
  contents: read
jobs:
  windows:
    name: Windows
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: x64
            arch: x64
            triplet: x64-windows
            configFlags: --enable-discord --enable-faad --enable-gif --enable-mikmod --enable-mpeg2 --enable-vpx --disable-faad
    env:
      CONFIGURATION: Release
      PLATFORM: ${{ matrix.platform }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      VCPKG_FEATURE_FLAGS: dependencygraph
      VCPKG_DEFAULT_TRIPLET: ${{ matrix.triplet }}
      VCPKG_INSTALLED_DIR: ${{ github.workspace }}/vcpkg_installed
    permissions:
      contents: write # For dependencygraph
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: ilammy/setup-nasm@v1
        if: ${{ matrix.useNasm }} == 'true'
      - name: Install vcpkg
        uses: lukka/run-vcpkg@v11
        id: runvcpkg
        with:
          vcpkgGitCommitId: 56954f1db97f38635782d5ad7cdfd45d2731c854
      - name: Integrate vcpkg
        run: |
          ${{ steps.runvcpkg.outputs.RUNVCPKG_VCPKG_ROOT_OUT }}/vcpkg integrate install
      - name: Upload libs
        uses: actions/upload-artifact@v3
        if: ${{ matrix.buildArtifacts }} == 'true'
        with:
          name: libs-${{ matrix.triplet }}
          path: ${{ env.VCPKG_INSTALLED_DIR }}\\${{ matrix.triplet }}
      - name: Build create_project
        run: |
          cd devtools/create_project/cmake
          cmake .
          cmake --build . -j 2
          ls
          cd ../../../
      - name: Call create_project
        run: | 
          mkdir build-scummvm
          cd build-scummvm
          ../devtools/create_project/cmake/Debug/create_project.exe .. --msvc --vcpkg ${{ matrix.configFlags }}
          ls
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.1.3
      - name: Build scummvm
        run: |
          cd build-scummvm
          ls
          msbuild scummvm.sln /m /p:VcpkgEnableManifest=true /p:BuildInParallel=true /p:Configuration=${{ env.CONFIGURATION }} /p:PreferredToolArchitecture=x64 /p:Platform=${{ matrix.platform }} /v:minimal
      - name: Upload scummvm
        uses: actions/upload-artifact@v3
        if: ${{ matrix.buildArtifacts }} == 'true'
        with:
          name: scummvm-${{ matrix.arch }}
          path: build-scummvm/${{ env.CONFIGURATION }}${{ matrix.arch }}/*.exe
      - name: Upload scummvm libs
        uses: actions/upload-artifact@v3
        if: ${{ matrix.buildArtifacts }} == 'true'
        with:
          name: scummvm-${{ matrix.arch }}
          path: ${{ env.VCPKG_INSTALLED_DIR }}\\${{ matrix.triplet }}\\bin\\*.dll
      - name: Upload scummvm symbols
        uses: actions/upload-artifact@v3
        if: ${{ matrix.buildArtifacts }} == 'true'
        with:
          name: symbols-${{ matrix.arch }}
          path: build-scummvm/${{ env.CONFIGURATION }}${{ matrix.arch }}/*.pdb
      - name: Upload scummvm libs symbols
        uses: actions/upload-artifact@v3
        if: ${{ matrix.buildArtifacts }} == 'true'
        with:
          name: symbols-${{ matrix.arch }}
          path: ${{ env.VCPKG_INSTALLED_DIR }}\\${{ matrix.triplet }}\\bin\\*.pdb
